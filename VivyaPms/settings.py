"""
Django settings for VivyaPms project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import json
from datetime import timedelta
from pathlib import Path
import boto3
import os
# from django.contrib.auth.backends import EmailBackend

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

rds_secret_name = "vivyascan-dev"
region_name = "ap-south-1"
aws_accessKey = "AKIA3EGVLRNQUUZ3SWCA"
aws_secretKey = "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"

secret_response = {}

try:
    session = boto3.Session(aws_access_key_id=aws_accessKey, aws_secret_access_key=aws_secretKey)
    client = session.client(
        service_name='secretsmanager',
        region_name=region_name
    )
    get_secret_value_response = client.get_secret_value(SecretId=rds_secret_name)
    secret_response = json.loads(get_secret_value_response['SecretString'])
except Exception as e:
    session = ''
    data = {"response_code": 500, "message": {"trace": str(e)}}
    print(data)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-svncs=)biau46(fgkoag02e_#@4aeq$42f5fw*l17%&ecfpg+8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'VivyaPms_app',
    'rest_framework',
    'rest_framework_swagger',
    'drf_yasg',
    'knox',

]
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'knox.auth.TokenAuthentication',
    ],
}
REST_KNOX = {
    "USER_SERIALIZER": 'Application.serializers.TokenSerializer',
    "TOKEN_TTL": 60 * 60 * 48,

}
# settings.py
# AUTH_USER_MODEL = 'VivyaPms_app.Users'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
# SWAGGER_SETTINGS = {
#     'SECURITY_DEFINITIONS': {
#         'api_key': {
#             'type': 'apiKey',
#             'in': 'header',
#             'name': 'Authorization'
#         }
#     }
# }
ROOT_URLCONF = 'VivyaPms.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'VivyaPms.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": 'vownix',
        "USER": secret_response['username'],
        "PASSWORD": secret_response['password'],
        "HOST": secret_response['host'],
        "PORT": secret_response['port'],
        # 'OPTIONS': {
        #     "init_command": "SET foreign_key_checks = 0;",
        # },
    }
}
# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    # Add other hashers if needed
]


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# from django.contrib.auth.backends import EmailBackend
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    # 'django.contrib.auth.backends.EmailBackend',
    # Add any additional authentication backends here if needed
]

